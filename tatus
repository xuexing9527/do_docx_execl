[1mdiff --git a/config.js b/config.js[m
[1mdeleted file mode 100644[m
[1mindex 3e05ac3..0000000[m
[1m--- a/config.js[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-const config = {[m
[31m-    outputPath: './output',[m
[31m-    docxsPath: './docxs',[m
[31m-    reg: {[m
[31m-        includeTargetReg: /<w:t>-=<\/w:t>.*?>(\d+?)<.*?<w:t>=-<\/w:t>/g,[m
[31m-        targetReg: /<w:t>(\d+?)<\/w:t>/,[m
[31m-    },[m
[31m-[m
[31m-}[m
[31m-module.exports = config[m
\ No newline at end of file[m
[1mdiff --git a/data.js b/data.js[m
[1mdeleted file mode 100644[m
[1mindex 6b9b17d..0000000[m
[1m--- a/data.js[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m- const data1 = ['22300200101', '22300200102', '22300200103', '22300200104', '22300200105', '22300200106', '22300200107', '22300200108', '22300200109', '22300200110', '22300200111', '22300200112', '22300200113', '22300200114', '22300200115', '22300200116', '22300200117', '22300200118', '22300200119', '22300200120', '22300200121', '22300200122', '22300200123', '22300200124', '22300200125', '22300200126', '22300200127', '22300200128', '22300200129', '22300200130', '22300200131', '22300200132', '22300200133', '22300200134', '22300200135', '22300200136', '22300200137', '22300200138', '22300200139', '22300200140', '22300200141', '22300200142', '22300200143', '22300200144', '22300200145', '22300200146', '22300200147', '22300200148', '22300200149', '22300200150', '22300200151', '22300200152', '22300200153', '22300200154', '22300200155', '22300180315', '22300180552'][m
[31m-[m
[31m- const data2 = [ '22300200201', '22300200202', '22300200203', '22300200205', '22300200206', '22300200207', '22300200208', '22300200209', '22300200210', '22300200211', '22300200212', '22300200213', '22300200214', '22300200215', '22300200216', '22300200217', '22300200218', '22300200219', '22300200220', '22300200221', '22300200222', '22300200223', '22300200224', '22300200225', '22300200226', '22300200227', '22300200228', '22300200229', '22300200230', '22300200231', '22300200232', '22300200233', '22300200234', '22300200235', '22300200236', '22300200237', '22300200238', '22300200239', '22300200240', '22300200241', '22300200242', '22300200243', '22300200244', '22300200245', '22300200246', '22300200247', '22300200248', '22300200249', '22300200250', '22300200251', '22300200252', '22300200253', '22300200254', '22300200255', '12100200133', '12100200236', '12200200121'][m
[31m-[m
[31m- const data3 = [ '22300200301', '22300200302', '22300200303', '22300200304', '22300200305', '22300200307', '22300200308', '22300200309', '22300200310', '22300200311', '22300200312', '22300200313', '22300200314', '22300200315', '22300200316', '22300200317', '22300200318', '22300200319', '22300200320', '22300200321', '22300200322', '22300200323', '22300200324', '22300200325', '22300200326', '22300200327', '22300200328', '22300200329', '22300200330', '22300200331', '22300200332', '22300200333', '22300200334', '22300200335', '22300200336', '22300200337', '22300200338', '22300200339', '22300200340', '22300200341', '22300200342', '22300200343', '22300200344', '22300200345', '22300200346', '22300200347', '22300200348', '22300200349', '22300200350', '22300200351', '22300200352', '22300200353', '22300200354', '42800200122', '52400200539', '52500200123', '22301200247', '22301200103' ][m
[31m-[m
[31m- const data4 = [ '022300200401', '022300200403', '022300200404', '022300200405', '022300200406', '022300200407', '022300200408', '022300200409', '022300200410', '022300200411', '022300200412', '022300200413', '022300200414', '022300200416', '022300200417', '022300200418', '022300200419', '022300200420', '022300200421', '022300200422', '022300200423', '022300200424', '022300200425', '022300200426', '022300200427', '022300200428', '022300200429', '022300200430', '022300200431', '022300200432', '022300200433', '022300200434', '022300200435', '022300200436', '022300200437', '022300200438', '022300200439', '022300200440', '022300200441', '022300200442', '022300200443', '022300200444', '022300200445', '022300200446', '022300200447', '022300200449', '022300200450', '022300200451', '022300200452', '022300200453', '022300200454', '042800200102', '042800200108', '042800200109', '042800200125', '042800200127', '022300180614', '020300190357' ][m
\ No newline at end of file[m
[1mdiff --git a/index.js b/index.js[m
[1mdeleted file mode 100644[m
[1mindex 172eeec..0000000[m
[1m--- a/index.js[m
[1m+++ /dev/null[m
[36m@@ -1,61 +0,0 @@[m
[31m-const admZip = require('adm-zip')[m
[31m-const fs = require('fs')[m
[31m-const config = require('./config')[m
[31m-[m
[31m-// ËØªÂèñÂÜÖÂÆπ[m
[31m-function readWord(name, errArr, className, dataArr) {[m
[31m-    // Ê≠§Â§ÑÂ∫îÂà§Êñ≠Êñá‰ª∂Á±ªÂûã‰∏∫docxÔºåÂÅöÂÖºÂÆπÂ§ÑÁêÜÔºå‰ª•Èò≤Êä•Èîô[m
[31m-    const zip = new admZip(`${config.docxsPath}/${className}/${name}`);[m
[31m-    // Ëß£ÂéãdocxÊñá‰ª∂Âà∞ÁõÆÂΩï outputPath[m
[31m-    const outputPath = `${config.outputPath}/docxs/${className}/${name}`[m
[31m-    zip.extractAllTo(outputPath, true);[m
[31m-    // ÊèêÂèñÂÜÖÂÆπ[m
[31m-    let contentXml = zip.readAsText("word/document.xml");[m
[31m-    // Ê≠£ÂàôÂåπÈÖçÊñáÂ≠ó[m
[31m-    let matchWT = contentXml.match(config.reg.includeTargetReg);[m
[31m-    if (!matchWT || matchWT?.length < 8) {[m
[31m-        errArr.push(`Â∞è‰∫é8‰∏™ÊàêÁª©ÁöÑ‰∫∫Ôºö${name}, ÂΩìÂâç‰∏∫${matchWT?.map(item => item.match(config.reg.targetReg)[1])}`)[m
[31m-    } else {[m
[31m-        let arr = [];[m
[31m-        arr.push(name)[m
[31m-        arr = arr.concat(matchWT?.map(item => item.match(/<w:t>(\d+?)<\/w:t>/)[1]))[m
[31m-        dataArr.push(arr)[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-function fsRead(className, classDataWrite) {[m
[31m-    fs.readdir(`./docxs/${className}`, (err, files) => {[m
[31m-        if (err) throw err[m
[31m-        const errArr = [][m
[31m-        const dataArr = [][m
[31m-        files.forEach(item => {[m
[31m-            readWord(item, errArr, className, dataArr)[m
[31m-        })[m
[31m-        writeXlsx(className, dataArr, classDataWrite)[m
[31m-    })[m
[31m-}[m
[31m-[m
[31m-function writeXlsx(className, data, classDataWrite) {[m
[31m-    const xlsx = require('node-xlsx').default;[m
[31m-    // ÁõÆÊ†áÂ§ÑÁêÜÊï∞ÊçÆ, ‰æùÁÖß‰º†ÂÖ•ÁöÑÊï∞ÊçÆÈ°∫Â∫è[m
[31m-    const targetData = [];[m
[31m-    classDataWrite.forEach((item, index) => {[m
[31m-        targetData.push([item])[m
[31m-    })[m
[31m-    targetData.forEach((item, index) => {[m
[31m-        data.forEach(i2 => {[m
[31m-            if (i2[0].indexOf(item[0]) >= 0) {[m
[31m-                targetData[index] = targetData[index].concat(i2)[m
[31m-            }[m
[31m-        })[m
[31m-    })[m
[31m-    const buffer = xlsx.build([{ name: 'test', data: targetData }])[m
[31m-    fs.writeFileSync(`${config.outputPath}/xlsx/${className}.xlsx`, buffer)[m
[31m-}[m
[31m-[m
[31m-// Ê†ºÂºèÂåñ xlsx Êï∞ÊçÆ ‰π¶ÂÜôÈ°∫Â∫è[m
[31m-const data1 = ['22300200101', '22300200102', '22300200103', '22300200104', '22300200105', '22300200106', '22300200107', '22300200108', '22300200109', '22300200110', '22300200111', '22300200112', '22300200113', '22300200114', '22300200115', '22300200116', '22300200117', '22300200118', '22300200119', '22300200120', '22300200121', '22300200122', '22300200123', '22300200124', '22300200125', '22300200126', '22300200127', '22300200128', '22300200129', '22300200130', '22300200131', '22300200132', '22300200133', '22300200134', '22300200135', '22300200136', '22300200137', '22300200138', '22300200139', '22300200140', '22300200141', '22300200142', '22300200143', '22300200144', '22300200145', '22300200146', '22300200147', '22300200148', '22300200149', '22300200150', '22300200151', '22300200152', '22300200153', '22300200154', '22300200155', '22300180315', '22300180552'][m
[31m-const data2 = [ '22300200201', '22300200202', '22300200203', '22300200205', '22300200206', '22300200207', '22300200208', '22300200209', '22300200210', '22300200211', '22300200212', '22300200213', '22300200214', '22300200215', '22300200216', '22300200217', '22300200218', '22300200219', '22300200220', '22300200221', '22300200222', '22300200223', '22300200224', '22300200225', '22300200226', '22300200227', '22300200228', '22300200229', '22300200230', '22300200231', '22300200232', '22300200233', '22300200234', '22300200235', '22300200236', '22300200237', '22300200238', '22300200239', '22300200240', '22300200241', '22300200242', '22300200243', '22300200244', '22300200245', '22300200246', '22300200247', '22300200248', '22300200249', '22300200250', '22300200251', '22300200252', '22300200253', '22300200254', '22300200255', '12100200133', '12100200236', '12200200121'][m
[31m-[m
[31m-fsRead('1Áè≠', data1)[m
[31m-// fsRead('2Áè≠', data2)[m
\ No newline at end of file[m
